# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.1.54-beta003"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta003/testkube_2.1.54-beta003_Darwin_x86_64.tar.gz"
      sha256 "f163913c8f5e23c2650d6d0c5fbcc9aeb9b98e36d636cce329afc5a24c053f5c"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta003/testkube_2.1.54-beta003_Darwin_arm64.tar.gz"
      sha256 "8bb1a645dc1b892c7a48fce5edf575bbaa4776f2499fdd613ef6a83897f8e46b"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta003/testkube_2.1.54-beta003_Linux_x86_64.tar.gz"
        sha256 "394bca9c65a6aee02face42ae8699afa8258ed490824f20c0700b4f021c38db5"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta003/testkube_2.1.54-beta003_Linux_arm64.tar.gz"
        sha256 "8b8dff5ccb4b77d13a65230802ad398dc57ccdf760a7eb1b511d76c88b3639d1"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
