# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Testkube < Formula
  desc "Testkube - your somewhat opinionated and friendly Kubernetes testing framework!"
  homepage "https://testkube.io"
  version "2.1.54-beta002"
  license "MIT"

  depends_on "helm"
  depends_on "kubectl"

  on_macos do
    on_intel do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta002/testkube_2.1.54-beta002_Darwin_x86_64.tar.gz"
      sha256 "de1f2cfb5b8e9312220fa2a2d48ebda2560c4fe4c7e3527a03594b8c9d305ad7"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
    on_arm do
      url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta002/testkube_2.1.54-beta002_Darwin_arm64.tar.gz"
      sha256 "f2b6a363624594306a12e0fdf3e5149c410ba3221994ce7f9576891a0fa8b7f2"

      def install
        bin.install "kubectl-testkube"
        ln_s bin/"kubectl-testkube", bin/"tk"
        ln_s bin/"kubectl-testkube", bin/"testkube"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta002/testkube_2.1.54-beta002_Linux_x86_64.tar.gz"
        sha256 "f01443e7673efeb6fde0a81fde697edc9dca45d9ab32bbd6ad3e5e3cfa377ebe"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kubeshop/testkube/releases/download/v2.1.54-beta002/testkube_2.1.54-beta002_Linux_arm64.tar.gz"
        sha256 "1648f201ad60dc35c321eb639873ee71e8efa6671a1095af728379fb735951d9"

        def install
          bin.install "kubectl-testkube"
          ln_s bin/"kubectl-testkube", bin/"tk"
          ln_s bin/"kubectl-testkube", bin/"testkube"
        end
      end
    end
  end
end
